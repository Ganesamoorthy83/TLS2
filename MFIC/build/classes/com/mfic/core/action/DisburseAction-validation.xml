<!DOCTYPE validators PUBLIC 
"-//OpenSymphony Group//XWork Validator 1.0.2//EN" 
"http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd">

<validators>

    <validator type="required">
        <param name="fieldName">dtlnDisburse</param>
        <param name="trim">true</param>
        <message key="dtlnDisburse.required"></message>
    </validator>
	<validator type="date">
	    <param name="fieldName">dtlnDisburse</param>
        <param name="min">01/01/1990</param>
        <param name="max">01/01/2100</param>
        <message key="dtlnDisburse.invalid"></message>
	</validator>

    <validator type="required">
        <param name="fieldName">lnamount</param>
        <param name="trim">true</param>
        <message key="lnamount.required"></message>
    </validator>
    <validator type="regex">
        <param name="fieldName">lnamount</param>
        <param name="expression"><![CDATA[(?n:(^\$?(?!0,?\d)\d{1,3}(?=(?<1>,)|(?<1>))(\k<1>\d{3})*(\.\d\d)?)$)]]></param>
        <param name="trim">true</param>
        <message key="lnamount.invalid"></message>
    </validator>

    <validator type="required">
        <param name="fieldName">interestRate</param>
        <param name="trim">true</param>
        <message key="interestRate.required"></message>
    </validator>
    <validator type="regex">
        <param name="fieldName">interestRate</param>
        <param name="expression"><![CDATA[([0-9\.]+)]]></param>
        <param name="trim">true</param>
        <message key="interestRate.invalid"></message>
    </validator>
  
    <validator type="required">
        <param name="fieldName">monthPaymnt</param>
        <param name="trim">true</param>
        <message key="monthPaymnt.required"></message>
    </validator>
    <validator type="regex">
        <param name="fieldName">monthPaymnt</param>
        <param name="expression"><![CDATA[([0-9\.]+)]]></param>
        <param name="trim">true</param>
        <message key="monthPaymnt.invalid"></message>
    </validator>

    <validator type="requiredstring">
        <param name="fieldName">dtmonPaymnt</param>
        <param name="trim">true</param>
        <message key="dtmonPaymnt.required"></message>
    </validator>
    <validator type="regex">
        <param name="fieldName">dtmonPaymnt</param>
        <param name="expression"><![CDATA[([0-9a-zA-Z\./-]+)]]></param>
        <param name="trim">true</param>
        <message key="dtmonPaymnt.invalid"></message>
    </validator>

    <validator type="regex">
        <param name="fieldName">commAmount</param>
        <param name="expression"><![CDATA[([0-9\.]+)]]></param>
        <param name="trim">true</param>
        <message key="commAmount.invalid"></message>
    </validator>
<!-- 
  <field name="commAmount">
        <field-validator type="regex">
             <param name="expression">^\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?$</param>
        <message key="commAmount.invalid"></message>
        </field-validator>
  </field>
 ^\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\.[0-9][0-9])?$
 ^(\$)?((\d+)|(\d{1,3})(\,\d{3})*)(\.\d{2,})?$
 ^\$?\d+(\.(\d{2}))?$
 (?n:(^\$?(?!0,?\d)\d{1,3}(?=(?<1>,)|(?<1>))(\k<1>\d{3})*(\.\d\d)?)$)
 -->
 
</validators>
